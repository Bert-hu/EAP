@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html>
<html lang="ch">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
    </style>
    <link href="~/layui/css/layui.css" rel="stylesheet" />
    <link href="~/dashboard/dashboard.css" rel="stylesheet" />
    <title>Laser Power Dashboard</title>
</head>

<body>
    <script>
        function showFullScreen() {

            /*判断是否全屏*/
            let isFullscreen = document.fullScreenElement//W3C
                || document.msFullscreenElement //IE11
                || document.mozFullScreenElement //火狐
                || document.webkitFullscreenElement //谷歌
                || false;

            if (!isFullscreen) {
                let el = document.documentElement;
                if (el.requestFullscreen) {
                    el.requestFullscreen();
                } else if (el.mozRequestFullScreen) {
                    el.mozRequestFullScreen();
                } else if (el.webkitRequestFullscreen) {
                    el.webkitRequestFullscreen();
                } else if (el.msRequestFullscreen) {
                    el.msRequestFullscreen();
                }
                $("#fullScreen").removeClass("fa-expand").addClass("fa-compress");
            }
            else {
                if (document.exitFullscreen) {
                    document.exitFullscreen();
                } else if (document.msExitFullscreen) {
                    document.msExitFullscreen();
                } else if (document.mozCancelFullScreen) {
                    document.mozCancelFullScreen();
                } else if (document.webkitCancelFullScreen) {
                    document.webkitCancelFullScreen();
                }
                $("#fullScreen").removeClass("fa-compress").addClass("fa-expand");
            }
        };
    </script>
    <div class="header">
        <div class="logo"> </div>
        <div class="title"><span>Laser Power Dashboard</span></div>
        <i id="fullScreen" class="layui-icon layui-icon-screen-full controlbox" onclick="showFullScreen()"></i>

    </div>

    <div class="box" style="  margin: 1vh;">
        <form class="layui-form" action="">


            <div class="layui-inline" style="display: flex; justify-content: center;">
                <div class="layui-form-item">
                    <select id="eqid" lay-filter="eqid">
                        <!-- 选项可以在这里添加 -->
                    </select>
                </div>
                <div class="layui-form-item">
                    <div class="layui-inline" id="range_datepick">
                        <div class="layui-input-inline">
                            <input type="text" autocomplete="off" id="datepick_start" class="layui-input" placeholder="开始日期">
                        </div>
                        <div class="layui-form-mid">00:00</div>
                        <div class="layui-form-mid">-</div>
                        <div class="layui-input-inline">
                            <input type="text" autocomplete="off" id="datepick_end" class="layui-input" placeholder="结束日期">
                        </div>
                        <div class="layui-form-mid">00:00</div>
                    </div>
                </div>
            </div>

            <div class="layui-inline" style="display: flex; justify-content: center;">
                <div class="layui-form-item">
                    <div class="layui-form-mid">下限</div>
                    <div class="layui-input-inline">
                        <input type="number" id="lower_limit" class="layui-input" placeholder="下限">
                    </div>
                    <div class="layui-form-mid">上限</div>
                    <div class="layui-input-inline">
                        <input type="number" id="upper_limit" class="layui-input" placeholder="上限">
                    </div>


                    <div class="layui-btn-container" style="display: flex; justify-content: center; margin-top: 10px;">
                        <button type="button" class="layui-btn layui-btn-sm" id="setLimits">设置</button>
                        @* <button type="button" class="layui-btn layui-btn-sm" id="loaddata">加载数据</button> *@
                        <button type="button" class="layui-btn layui-btn-sm" id="downloaddata">下载数据</button>
                    </div>
                </div>
            </div>
        </form>



        <div id="datachart" class="box" style=" margin: 1vh;"></div>

        <div id="useageDatachart" class="box" style=" margin: 1vh;"></div>

    </div>
    <script src="~/jquery-3.7.1.js"></script>
    <script src="~/echarts/echarts.js"></script>
    <script src="~/layui/layui.js"></script>
    <script>
        $("#datepick_start").val("@DateTime.Today.AddDays(-30).ToString("yyyy-MM-dd")");
        $("#datepick_end").val("@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")");
        layui.use(['form', 'slider', 'laydate', 'element'], function () {
            var form = layui.form
                , laydate = layui.laydate
                , slider = layui.slider
                , element = layui.element;

            laydate.render({
                elem: '#range_datepick',
                range: ['#datepick_start', '#datepick_end'],
                //rangeLinked: true,
                max: '@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")',
                done: function (value, date, endDate) {
                    loadData(); // Load data when date range changes
                }
            });


            // $.post('/Dashboard/GetMachineList', {}, function (data) {
            //     $("#eqid").empty();
            //     for (var i = 0; i < data.length; i++) {
            //         $("#eqid").append("<option value='" + data[i] + "'>" + data[i] + "</option>");
            //     }
            //     form.render();
            //     loadData();
            // });

            $.post('/Dashboard/GetConfigs', {}, function (data) {
                $("#eqid").empty();
                for (var i = 0; i < data.eqids.length; i++) {
                    $("#eqid").append("<option value='" + data.eqids[i] + "'>" + data.eqids[i] + "</option>");
                }
                //$("#lower_limit").val(data.lowerlimit);
                //$("#upper_limit").val(data.upperlimit);

                form.render();
                loadData();
            });

            form.on('select(eqid)', function (data) {
                loadData(); // Load data when equipment ID changes
            });


            $("#loaddata").click(function () {
                loadData();

            });

            $("#setLimits").click(function () {
                $.post('/Dashboard/SetLimits', {
                    equipmentid: $("#eqid").val(),
                    lowerlimit: $("#lower_limit").val(),
                    upperlimit: $("#upper_limit").val()
                }, function (data) {
                    console.log(data);
                    loadData();
                });
            });//

            function loadData() {
                $.post('/Dashboard/GetData', {
                    equipmentid: $("#eqid").val(),
                    startTime: $("#datepick_start").val(),
                    endTime: $("#datepick_end").val()
                }, function (data) {
                    $("#lower_limit").val(data.lowerlimit);
                    $("#upper_limit").val(data.upperlimit);
                    SetPowerChart(data.chartdata, data.lowerlimit, data.upperlimit,data.min,data.max);
                    SetUseageChart(data.useageChartData);
                });
            }

            function SetPowerChart(data, lowerlimit, upperlimit,minv,maxv) {
                console.log(data);
                var myChart = echarts.init(document.getElementById('datachart'));

                var option = {
                    tooltip: {
                        formatter: function (params) {
                            if (params.seriesType === 'scatter') {
                                return params.marker + params.value[1] + "<br />" + "Station: " + params.value[2] + "<br />" + "EventTime: " + params.value[0];
                            } else if (params.seriesType === 'markLine') {
                                return 'Limit: ' + params.value[1]; // 自定义 markLine 的 tooltip 显示内容
                            }
                            return '';
                        },
                        textStyle: {
                            color: '#fff' // 设置tooltip文本颜色为白色
                        }
                    },
                    xAxis: {
                        type: 'time',
                        splitNumber: 5,
                        axisLabel: {
                            show: true,
                            color: '#fff' // 坐标轴标签颜色
                        },
                        axisTick: {
                            show: false
                        },
                        nameTextStyle: {
                            color: '#fff' // 坐标轴名称颜色
                        }
                    },
                    yAxis: {
                        min: minv, // 设置Y轴的最小值
                        max: maxv,
                        axisLabel: {
                            color: '#fff' // 坐标轴标签颜色
                        },
                        nameTextStyle: {
                            color: '#fff' // 坐标轴名称颜色
                        }
                    },
                    series: [
                        {
                            symbolSize: 10,
                            data: data,
                            type: 'scatter',
                            legendHoverLink: true,
                            hoverAnimation: true,
                            emphasis: {
                                label: {
                                    show: true,
                                    formatter: function (param) {
                                        return param.data[1];
                                    },
                                    position: 'top'
                                }
                            },
                            markLine: {
                                data: [
                                    { yAxis: lowerlimit, lineStyle: { type: 'dashed' }, tooltip: { formatter: 'Lower Limit: ' + lowerlimit } }, // 上限虚线
                                    { yAxis: upperlimit, lineStyle: { type: 'dashed' }, tooltip: { formatter: 'Upper Limit: ' + upperlimit } }  // 下限虚线
                                ]
                            }
                        }
                    ],
                    dataZoom: [
                        {
                            type: 'slider', // 滑块类型的缩放
                            xAxisIndex: [0], // 适用于第一个x轴
                            start: 0, // 起始百分比
                            end: 100, // 结束百分比
                            handleSize: 10, // 手柄大小
                            textStyle: {
                                color: '#fff' // 文字颜色
                            }
                        },
                        {
                            type: 'inside', // 内部缩放
                            xAxisIndex: [0],
                            start: 0,
                            end: 100
                        }
                    ],
                    // 设置全局文本颜色为白色
                    textStyle: {
                        color: '#fff' // 全局文本颜色
                    }
                };



                myChart.setOption(option);

            }

            function SetUseageChart(data) {
                console.log(data);
                var myChart = echarts.init(document.getElementById('useageDatachart'));

                var option = {
                    tooltip: {
                        formatter: function (params) {
                            if (params.seriesType === 'scatter') {
                                return params.marker + params.value[1] + "<br />" + "Station: " + params.value[2] + "<br />" + "EventTime: " + params.value[0];
                            } else if (params.seriesType === 'markLine') {
                                return 'Limit: ' + params.value[1]; // 自定义 markLine 的 tooltip 显示内容
                            }
                            return '';
                        },
                        textStyle: {
                            color: '#fff' // 设置tooltip文本颜色为白色
                        }
                    },
                    xAxis: {
                        type: 'time',
                        splitNumber: 5,
                        axisLabel: {
                            show: true,
                            color: '#fff' // 坐标轴标签颜色
                        },
                        axisTick: {
                            show: false
                        },
                        nameTextStyle: {
                            color: '#fff' // 坐标轴名称颜色
                        }
                    },
                    yAxis: {
                        axisLabel: {
                            color: '#fff' // 坐标轴标签颜色
                        },
                        nameTextStyle: {
                            color: '#fff' // 坐标轴名称颜色
                        }
                    },
                    series: [
                        {
                            symbolSize: 10,
                            data: data,
                            type: 'scatter',
                            legendHoverLink: true,
                            hoverAnimation: true,
                            emphasis: {
                                label: {
                                    show: true,
                                    formatter: function (param) {
                                        return param.data[1];
                                    },
                                    position: 'top'
                                }
                            }
                        }
                    ],
                    dataZoom: [
                        {
                            type: 'slider', // 滑块类型的缩放
                            xAxisIndex: [0], // 适用于第一个x轴
                            start: 0, // 起始百分比
                            end: 100, // 结束百分比
                            handleSize: 10, // 手柄大小
                            textStyle: {
                                color: '#fff' // 文字颜色
                            }
                        },
                        {
                            type: 'inside', // 内部缩放
                            xAxisIndex: [0],
                            start: 0,
                            end: 100
                        }
                    ],
                    // 设置全局文本颜色为白色
                    textStyle: {
                        color: '#fff' // 全局文本颜色
                    }
                };



                myChart.setOption(option);

            }

            $("#downloaddata").click(function () {



                var reqdata = {
                    equipmentid: $("#eqid").val(),
                    startTime: $("#datepick_start").val(),
                    endTime: $("#datepick_end").val()
                };
                console.log(reqdata);
                $.ajax({
                    url: './DownloadData',
                    type: 'POST',
                    data: reqdata,
                    xhr: function () {
                        const xhr = new window.XMLHttpRequest();
                        xhr.responseType = 'blob'; // 设置响应类型为 blob
                        return xhr;
                    },
                    success: function (blob) {
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = "data.xlsx";
                        document.body.appendChild(a);
                        a.click();
                        a.remove();
                        window.URL.revokeObjectURL(url);
                    },
                    error: function (xhr, status, error) {
                        console.error('There was a problem with the request:', error);
                        alert('Request failed: ' + error);
                    }
                });
            });

        });
    </script>
</body>
</html>